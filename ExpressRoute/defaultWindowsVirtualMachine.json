{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"vmName": {
			"type": "string"
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_A1",
			"allowedValues": ["Standard_A0",
			"Standard_A1",
			"Standard_A2",
			"Standard_A3",
			"Standard_A4",
			"Standard_A5",
			"Standard_A6",
			"Standard_A7",
			"Standard_A8",
			"Standard_A9",
			"Standard_A10",
			"Standard_A11"],
			"metadata": {
				"description": "Azure VM Sizes. If you dont see a size you want, please check with your administrator."
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "Central US",
			"allowedValues": ["Central US",
			"East US",
			"East US 2",
			"West US",
			"North Central US",
			"South Central US"],
			"metadata": {
				"description": "Azure Locations. If you dont see a location you want, please check with your administrator."
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "standard",
			"allowedValues": ["premium",
			"standard"],
			"metadata": {
				"description": "Storage Account Type."
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "jarek",
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"windowsOSVersion": {
			"type": "string",
			"defaultValue": "2012-R2-Datacenter",
			"allowedValues": ["2008-R2-SP1",
			"2012-Datacenter",
			"2012-R2-Datacenter",
			"2016-Technical-Preview-3-with-Containers",
			"Windows-Server-Technical-Preview"],
			"metadata": {
				"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
			}
		}
	},
	"variables": {
		"imagePublisher": "MicrosoftWindowsServer",
		"imageOffer": "WindowsServer",
		"storageAccountName": "[concat('mc', parameters('storageAccountType'), toLower(parameters('vmName')),'sa')]",
		"storageAccountType": "[concat(parameters('storageAccountType'),'_LRS')]",
		"vmStorageAccountContainerName": "vhds",
		"nicName": "[concat('Nic', uniqueString(parameters('vmName'), resourceGroup().id))]",
		"virtualNetworkResourceGroup": "ChicagoER_RG",
		"virtualNetworkName": "TestVnet",
		"subnetName": "Subnet-1",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"vnetID": "[resourceId(variables('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
		"networkSecurityGroupName": "[concat('mcWindowsDefault', toLower(parameters('vmName')),'NSG')]"
		},
	"resources": [{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('storageAccountName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[variables('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('networkSecurityGroupName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"securityRules": [{
					"name": "allow-rdp",
					"properties": {
						"description": "Allows RDP traffic",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "3389",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				},
				{
					"name": "allow-http",
					"properties": {
						"description": "Allow WEB",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "80",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 200,
						"direction": "Inbound"
					}
				},
				{
					"name": "allow-https",
					"properties": {
						"description": "Allow secure WEB",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "443",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 300,
						"direction": "Inbound"
					}
				}]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('nicName')]",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "NetworkInterface"
			},
			"dependsOn": ["[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"],
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('subnetRef')]"
						},
						"networkSecurityGroup": {
							"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
						}
					}
				}]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('vmName')]",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "VirtualMachine"
			},
			"dependsOn": ["[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[parameters('vmName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[parameters('windowsOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
					}]
				}
			}
		}]
	}